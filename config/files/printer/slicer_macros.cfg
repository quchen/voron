[gcode_macro _GEOMETRY_CALIBRATION]
description: Home, QGL
gcode:
    BED_MESH_CLEAR

    {% if "x" not in printer.toolhead.homed_axes or "y" not in printer.toolhead.homed_axes or "z" not in printer.toolhead.homed_axes %}
        M117 Homing XYZ
        G28 # Home all
    {% else %}
        { action_respond_info("XYZ already homed") }
    {% endif %}

    {% if not printer.quad_gantry_level.applied %}
        M117 Quad Gantry Level
        QUAD_GANTRY_LEVEL
        # Always home Z once more, since QGL can change the Z position
        M117 Re-homing Z after QGL
        G28 Z
    {% else %}
        { action_respond_info("Quad Gantry Level already applied") }
    {% endif %}



[gcode_macro PRINT_START]
description: Called by the slicer before printing
gcode:
    {% set chamber_heating = params.CHAMBER and params.CHAMBER|int > 20 %}

    M140 S{params.BED} # Set bed target temperature
    M104 S{params.EXTRUDER} # Set extruder target temperature
    {% if chamber_heating %}
        M106 S255 # Print fan on full throttle for more convective heating
    {% endif %}
    M117 Waiting for bed temperature: {params.BED}째C
    M190 S{params.BED} # Set bed temperature and wait
    M117 Waiting for extruder temperature: {params.EXTRUDER}째C
    M109 S{params.EXTRUDER} # Set extruder temperature and wait

    _GEOMETRY_CALIBRATION

    M117 Calibrate Z
    SET_GCODE_OFFSET Z=0
    CALIBRATE_Z

    BED_MESH_PROFILE LOAD=default

    {% if chamber_heating %}
        M117 Waiting for chamber temperature: {params.CHAMBER}째C
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={params.CHAMBER}
        M107 # Print fan off again, chamber is on temperature
    {% endif %}

    M117 Waiting for extruder temperature: {params.EXTRUDER}째C
    G4 P5000 # Wait 5s to emergency stop or whatever
    M117

[gcode_macro PRINT_END]
description: Called by the slicer after printing
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 10, th.axis_maximum.z]|min %}

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400           # Wait for all movement to finish
    G92 E0         # Reset extruder position to 0
    G1 E-2.0 F3600 # Retract filament

    TURN_OFF_HEATERS

    G90 # Absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} # move nozzle to avoid stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} # park nozzle in the back
    M107 # Turn off part cooling fan

    BED_MESH_CLEAR

    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro M600]
description: Pause print
gcode:
    {% set th = printer.toolhead %}
    {% set z_toolchange = th.position.z + 50 %}

    M400 # Wait for all movement to finish
    SAVE_GCODE_STATE NAME=STATE_M600

    { action_respond_info("M600 ready; RESUME to resume") }
    PAUSE

    M83 # Relative extruder
    G1 E-1 F3600 # Retract to avoid oozing

    RESTORE_GCODE_STATE NAME=STATE_M600
