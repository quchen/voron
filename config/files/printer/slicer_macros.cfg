[gcode_macro _GEOMETRY_CALIBRATION]
description: Home, QGL
gcode:
    BED_MESH_CLEAR

    {% set xyz_are_homed = "x" in printer.toolhead.homed_axes and "y" in printer.toolhead.homed_axes and "z" in printer.toolhead.homed_axes %}
    {% if not xyz_are_homed %}
        M117 Home XYZ
        G28 # Home all
    {% else %}
        { action_respond_info("XYZ already homed") }
    {% endif %}

    {% set qgl_applied = printer.quad_gantry_level.applied %}
    {% set qgl_applied = False %} # QGL before every print!
    {% if not qgl_applied %}
        M117 Quad Gantry Level
        QUAD_GANTRY_LEVEL
        # Always home Z once more, since QGL changes Z plane
        M117 Re-home Z after QGL
        G28 Z
    {% else %}
        { action_respond_info("Quad Gantry Level already applied") }
    {% endif %}

[gcode_macro _NOZZLE_PRIMER_LINE]
description:
    Print a primer line to get rid of some oozing in the print head.
gcode:
    {% set x_start = params.X | float | default(0) %}
    {% set y_start = params.Y | float | default(0) %}
    {% set z = params.Z | float | default(10) %} ; 10mm hover height for safety

    SAVE_GCODE_STATE NAME=_NOZZLE_PRIMER_LINE
    G1 Z{z + 10}
    G1 X{x_start} Y{y_start} F4000             ; Move to start
    G1 Z{z} F1000                              ; Nozzle above bed
    G92 E0                                     ; Zero extruder
    M83                                        ; Relative extruder
    G1 X{x_start+60}  E5 F1000                 ; Intro line, low flow
    G1 X{x_start+120} E10 F1000                ; Intro line, high flow
    G1 E-1 F4000                               ; Retract
    G1 X{x_start+120-10} F2000                 ; Wipe backwards onto the primer line, hopefully losing ooze
    G1 X{x_start+120-10-5} Y{y_start+5} Z{z+5} ; Move nozzle out of the way so it doesn’t pick up anything before printing
    G92 E0                                     ; Zero extruder
    RESTORE_GCODE_STATE NAME=_NOZZLE_PRIMER_LINE

[gcode_macro PRINT_START]
description: Called by the slicer before printing
gcode:
    {% set chamber_heating = params.CHAMBER and params.CHAMBER|int > 20 %}

    M140 S{params.BED} # Set bed target temperature
    M104 S{params.EXTRUDER} # Set extruder target temperature
    {% if chamber_heating %}
        # All fans on full throttle for more convective heating
        _NEVERMORE_START
        M106 S255
    {% endif %}

    _ELECTRONICS_FANS_START SPEED=0.25

    M117 Waiting for extruder temperature: {params.EXTRUDER}°C
    M109 S{params.EXTRUDER} # Set extruder temperature and wait

    M117 Waiting for bed temperature: {params.BED}°C
    M190 S{params.BED} # Set bed temperature and wait

    _GEOMETRY_CALIBRATION

    NOZZLE_WIPE N=2
    M117 Calibrate Z
    SET_GCODE_OFFSET Z=0
    CALIBRATE_Z

    BED_MESH_PROFILE LOAD=default

    {% if chamber_heating %}
        M117 Waiting for chamber temperature: {params.CHAMBER}°C
        TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={params.CHAMBER}
        M107 # Print fan off again, chamber is on temperature
    {% endif %}

    NOZZLE_WIPE N=1

    M117 ; Clear status message

[gcode_macro _NEVERMORE_START]
description: Remove scheduled nevermore turnoff and run it on full throttle.
gcode:
    UPDATE_DELAYED_GCODE ID=_NEVERMORE_STOP DURATION=0
    SET_FAN_SPEED FAN=nevermore SPEED=1

# Turn off nevermore after a delay: UPDATE_DELAYED_GCODE ID=_NEVERMORE_STOP DURATION=<delay[s]>
[delayed_gcode _NEVERMORE_STOP]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=0

[gcode_macro NOZZLE_WIPE]
description: Wipe the nozzle on the decontaminator brush. N=<default: 1 times>.
gcode:
    {% set x_left = 30 %}
    {% set x_right = 85 %}
    {% set y_wipe = 258 %}
    {% set z_wipe = 2.5 %}
    {% set z_travel_offset = 10 %}
    {% set wipe_cycles = params.N | default(1) | int %}

    SAVE_GCODE_STATE NAME=_STATE_NOZZLE_WIPE

    G90 ; Abs0lute coordinates
    G1 F4000 X{x_right} Y{y_wipe} Z{z_wipe + z_travel_offset}
    G1 F4000 Z{z_wipe}
    {% for i in range(0, wipe_cycles) %}
        G1 F4000 X{x_left}
        G1 F4000 X{x_right}
    {% endfor %}
    G1 F4000 X{x_right} Z{z_wipe + z_travel_offset}

    RESTORE_GCODE_STATE NAME=_STATE_NOZZLE_WIPE

[gcode_macro _ELECTRONICS_FANS_START]
gcode:
    UPDATE_DELAYED_GCODE ID=_ELECTRONICS_FANS_STOP DURATION=0
    SET_FAN_SPEED FAN=raspi SPEED={params.SPEED | default(1) }
    SET_FAN_SPEED FAN=octopus SPEED={params.SPEED | default(1) }

[delayed_gcode _ELECTRONICS_FANS_STOP]
gcode:
    SET_FAN_SPEED FAN=raspi SPEED=0
    SET_FAN_SPEED FAN=octopus SPEED=0

[gcode_macro PRINT_END]
description: Called by the slicer after printing
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 50, th.axis_maximum.z]|min %}

    {% set chamber_heating = params.CHAMBER and params.CHAMBER|int > 20 %}
    {% if chamber_heating %}
        # Run Nevermore for another 15min to clean the air
        UPDATE_DELAYED_GCODE ID=_NEVERMORE_STOP DURATION={15 * 60}
    {% endif %}
    UPDATE_DELAYED_GCODE ID=_ELECTRONICS_FANS_STOP DURATION=60

    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400           # Wait for all movement to finish
    G92 E0         # Reset extruder position to 0
    G1 E-2.0 F3600 # Retract filament

    TURN_OFF_HEATERS

    G90 # Absolute positioning
    G0 F4000 X{x_safe} Y{y_safe} Z{z_safe} # move nozzle to avoid stringing
    G0 F4000 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} # park nozzle in the back
    M107 # Turn off part cooling fan

    BED_MESH_CLEAR

    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro M600]
description: Color change
gcode:
    {% set th = printer.toolhead %}
    {% set z_toolchange = [th.position.z + 10, 100]|max %}

    M400 # Wait for all movement to finish
    SAVE_GCODE_STATE NAME=STATE_M600

    M83 # Relative extruder
    G1 E-1 F3600 # Retract to avoid oozing

    G90 ; Abs0lute positioning
    G0 Z{z_toolchange} F8000
    G0 X125 Y0 F8000

    { action_respond_info("M600 ready; RESUME to resume") }
    PAUSE

    RESTORE_GCODE_STATE NAME=STATE_M600


[gcode_macro BEFORE_LAYER_CHANGE]
description: Called by the slicer before each layer change.
gcode:
    # Empty so far

[gcode_macro AFTER_LAYER_CHANGE]
description: Called by the slicer after each layer change.
gcode:
    # Empty so far
