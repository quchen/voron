[led chamber]
white_pin: led_chamber_illumination
hardware_pwm: true
initial_WHITE: 0.1
cycle_time: 0.002

[neopixel stealthburner]
pin: led_rgb_stealthburner
chain_count: 3
color_order: GRBW
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 1.0

[delayed_gcode led_initialization]
initial_duration: 1
gcode:
    SET_LED_TEMPLATE LED=stealthburner INDEX=1 TEMPLATE=stealthburner_temperature_display
    # SET_LED LED=stealthburner RED=1 GREEN=0 BLUE=0 WHITE=0 INDEX=1 TRANSMIT=0
    SET_LED LED=stealthburner RED=0 GREEN=0 BLUE=0 WHITE=1 INDEX=2 TRANSMIT=0
    SET_LED LED=stealthburner RED=0 GREEN=0 BLUE=0 WHITE=1 INDEX=3

    SET_LED LED=display RED=0.3 GREEN=0.1 BLUE=0 INDEX=1 TRANSMIT=0 # Knob 1
    SET_LED LED=display RED=0.3 GREEN=0.1 BLUE=0 INDEX=2 TRANSMIT=0 # Knob 2
    SET_LED LED=display RED=1   GREEN=0.4 BLUE=0 INDEX=3            # Display

[gcode_macro STEALTHBURNER_WHITE]
gcode:
    SET_LED LED=stealthburner RED=0 GREEN=0 BLUE=0 WHITE=1 INDEX=1 TRANSMIT=0
    SET_LED LED=stealthburner RED=0 GREEN=0 BLUE=0 WHITE=1 INDEX=2 TRANSMIT=0
    SET_LED LED=stealthburner RED=0 GREEN=0 BLUE=0 WHITE=1 INDEX=3

[display_template stealthburner_temperature_display]
text:
    {% set room = 20 %}
    {% set extruder = printer.extruder %}
    {% set bed      = printer.heater_bed %}
    {% set chamber  = printer['temperature_sensor chamber'] %}
    {% set chamber_target = 40 %}

    {% set extruder_frac = (extruder.temperature - room) / (extruder.target - room) if extruder.target > room else 1 %}
    {% set bed_frac      = (bed.temperature      - room) / (bed.target      - room) if bed.target      > room else 1 %}
    {% set chamber_frac  = (chamber.temperature  - room) / (chamber_target  - room) if chamber_target  > room else 1 %}

    {% set minimum_frac  = [extruder_frac, bed_frac, chamber_frac] | min %}

    {% set red = (minimum_frac) ** 2 %}
    {% set green = 0 %}
    {% set blue = (1 - minimum_frac) ** 2 %}
    {% set white = 0 %}

    {red},{green},{blue},{white}
